/*
 * 5Minds Engine API
 * This is the swagger ui documentation of the 5Minds Engine API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.miragon.processcube.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Describes the payload that must be send with a fetchAndLock HTTP POST request.
 */
@ApiModel(description = "Describes the payload that must be send with a fetchAndLock HTTP POST request.")
@JsonPropertyOrder({
  FetchAndLockRequestPayload.JSON_PROPERTY_WORKER_ID,
  FetchAndLockRequestPayload.JSON_PROPERTY_TOPIC_NAME,
  FetchAndLockRequestPayload.JSON_PROPERTY_MAX_TASKS,
  FetchAndLockRequestPayload.JSON_PROPERTY_LONG_POLLING_TIMEOUT,
  FetchAndLockRequestPayload.JSON_PROPERTY_LOCK_DURATION,
  FetchAndLockRequestPayload.JSON_PROPERTY_PAYLOAD_FILTER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-19T14:39:29.278702+02:00[Europe/Berlin]")
public class FetchAndLockRequestPayload {
  public static final String JSON_PROPERTY_WORKER_ID = "workerId";
  private String workerId;

  public static final String JSON_PROPERTY_TOPIC_NAME = "topicName";
  private String topicName = null;

  public static final String JSON_PROPERTY_MAX_TASKS = "maxTasks";
  private BigDecimal maxTasks;

  public static final String JSON_PROPERTY_LONG_POLLING_TIMEOUT = "longPollingTimeout";
  private BigDecimal longPollingTimeout;

  public static final String JSON_PROPERTY_LOCK_DURATION = "lockDuration";
  private BigDecimal lockDuration;

  public static final String JSON_PROPERTY_PAYLOAD_FILTER = "payloadFilter";
  private String payloadFilter;


  public FetchAndLockRequestPayload workerId(String workerId) {
    
    this.workerId = workerId;
    return this;
  }

   /**
   * The ID of the worker that wants to fetch and lock tasks.
   * @return workerId
  **/
  @ApiModelProperty(required = true, value = "The ID of the worker that wants to fetch and lock tasks.")
  @JsonProperty(JSON_PROPERTY_WORKER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getWorkerId() {
    return workerId;
  }


  public void setWorkerId(String workerId) {
    this.workerId = workerId;
  }


  public FetchAndLockRequestPayload topicName(String topicName) {
    
    this.topicName = topicName;
    return this;
  }

   /**
   * The topic of the tasks to fetch and lock.
   * @return topicName
  **/
  @ApiModelProperty(required = true, value = "The topic of the tasks to fetch and lock.")
  @JsonProperty(JSON_PROPERTY_TOPIC_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTopicName() {
    return topicName;
  }


  public void setTopicName(String topicName) {
    this.topicName = topicName;
  }


  public FetchAndLockRequestPayload maxTasks(BigDecimal maxTasks) {
    
    this.maxTasks = maxTasks;
    return this;
  }

   /**
   * The maximum number of tasks to fetch and lock.
   * @return maxTasks
  **/
  @ApiModelProperty(required = true, value = "The maximum number of tasks to fetch and lock.")
  @JsonProperty(JSON_PROPERTY_MAX_TASKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getMaxTasks() {
    return maxTasks;
  }


  public void setMaxTasks(BigDecimal maxTasks) {
    this.maxTasks = maxTasks;
  }


  public FetchAndLockRequestPayload longPollingTimeout(BigDecimal longPollingTimeout) {
    
    this.longPollingTimeout = longPollingTimeout;
    return this;
  }

   /**
   * The timeout for the long polling request.
   * @return longPollingTimeout
  **/
  @ApiModelProperty(required = true, value = "The timeout for the long polling request.")
  @JsonProperty(JSON_PROPERTY_LONG_POLLING_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getLongPollingTimeout() {
    return longPollingTimeout;
  }


  public void setLongPollingTimeout(BigDecimal longPollingTimeout) {
    this.longPollingTimeout = longPollingTimeout;
  }


  public FetchAndLockRequestPayload lockDuration(BigDecimal lockDuration) {
    
    this.lockDuration = lockDuration;
    return this;
  }

   /**
   * The duration for which the tasks should be locked.
   * @return lockDuration
  **/
  @ApiModelProperty(required = true, value = "The duration for which the tasks should be locked.")
  @JsonProperty(JSON_PROPERTY_LOCK_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getLockDuration() {
    return lockDuration;
  }


  public void setLockDuration(BigDecimal lockDuration) {
    this.lockDuration = lockDuration;
  }


  public FetchAndLockRequestPayload payloadFilter(String payloadFilter) {
    
    this.payloadFilter = payloadFilter;
    return this;
  }

   /**
   * A filter for the payload of the tasks.
   * @return payloadFilter
  **/
  @ApiModelProperty(required = true, value = "A filter for the payload of the tasks.")
  @JsonProperty(JSON_PROPERTY_PAYLOAD_FILTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPayloadFilter() {
    return payloadFilter;
  }


  public void setPayloadFilter(String payloadFilter) {
    this.payloadFilter = payloadFilter;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FetchAndLockRequestPayload fetchAndLockRequestPayload = (FetchAndLockRequestPayload) o;
    return Objects.equals(this.workerId, fetchAndLockRequestPayload.workerId) &&
        Objects.equals(this.topicName, fetchAndLockRequestPayload.topicName) &&
        Objects.equals(this.maxTasks, fetchAndLockRequestPayload.maxTasks) &&
        Objects.equals(this.longPollingTimeout, fetchAndLockRequestPayload.longPollingTimeout) &&
        Objects.equals(this.lockDuration, fetchAndLockRequestPayload.lockDuration) &&
        Objects.equals(this.payloadFilter, fetchAndLockRequestPayload.payloadFilter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(workerId, topicName, maxTasks, longPollingTimeout, lockDuration, payloadFilter);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FetchAndLockRequestPayload {\n");
    sb.append("    workerId: ").append(toIndentedString(workerId)).append("\n");
    sb.append("    topicName: ").append(toIndentedString(topicName)).append("\n");
    sb.append("    maxTasks: ").append(toIndentedString(maxTasks)).append("\n");
    sb.append("    longPollingTimeout: ").append(toIndentedString(longPollingTimeout)).append("\n");
    sb.append("    lockDuration: ").append(toIndentedString(lockDuration)).append("\n");
    sb.append("    payloadFilter: ").append(toIndentedString(payloadFilter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

