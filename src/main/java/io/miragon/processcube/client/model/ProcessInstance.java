/*
 * 5Minds Engine API
 * This is the swagger ui documentation of the 5Minds Engine API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.miragon.processcube.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.miragon.processcube.client.model.Correlation;
import io.miragon.processcube.client.model.EventType;
import io.miragon.processcube.client.model.FlowNodeInstance;
import io.miragon.processcube.client.model.ProcessInstanceState;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * A ProcessInstance.
 */
@ApiModel(description = "A ProcessInstance.")
@JsonPropertyOrder({
  ProcessInstance.JSON_PROPERTY_CORRELATION_ID,
  ProcessInstance.JSON_PROPERTY_PROCESS_INSTANCE_ID,
  ProcessInstance.JSON_PROPERTY_PROCESS_DEFINITION_ID,
  ProcessInstance.JSON_PROPERTY_PROCESS_MODEL_ID,
  ProcessInstance.JSON_PROPERTY_PROCESS_MODEL_NAME,
  ProcessInstance.JSON_PROPERTY_PARENT_PROCESS_INSTANCE_ID,
  ProcessInstance.JSON_PROPERTY_HASH,
  ProcessInstance.JSON_PROPERTY_XML,
  ProcessInstance.JSON_PROPERTY_STATE,
  ProcessInstance.JSON_PROPERTY_ERROR,
  ProcessInstance.JSON_PROPERTY_OWNER_ID,
  ProcessInstance.JSON_PROPERTY_ANONYMOUS_SESSION_ID,
  ProcessInstance.JSON_PROPERTY_STARTED_BY_ROOT_ACCESS_TOKEN,
  ProcessInstance.JSON_PROPERTY_CREATED_AT,
  ProcessInstance.JSON_PROPERTY_FINISHED_AT,
  ProcessInstance.JSON_PROPERTY_RESTARTED_AT,
  ProcessInstance.JSON_PROPERTY_TERMINATED_BY_USER_ID,
  ProcessInstance.JSON_PROPERTY_DURATION_IN_MILLISECONDS,
  ProcessInstance.JSON_PROPERTY_START_EVENT_ID,
  ProcessInstance.JSON_PROPERTY_START_EVENT_TYPE,
  ProcessInstance.JSON_PROPERTY_START_TOKEN,
  ProcessInstance.JSON_PROPERTY_END_EVENT_ID,
  ProcessInstance.JSON_PROPERTY_END_EVENT_TYPE,
  ProcessInstance.JSON_PROPERTY_END_TOKEN,
  ProcessInstance.JSON_PROPERTY_METADATA,
  ProcessInstance.JSON_PROPERTY_CORRELATION,
  ProcessInstance.JSON_PROPERTY_TRIGGERED_BY_FLOW_NODE_INSTANCE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-19T14:39:29.278702+02:00[Europe/Berlin]")
public class ProcessInstance {
  public static final String JSON_PROPERTY_CORRELATION_ID = "correlationId";
  private String correlationId;

  public static final String JSON_PROPERTY_PROCESS_INSTANCE_ID = "processInstanceId";
  private String processInstanceId;

  public static final String JSON_PROPERTY_PROCESS_DEFINITION_ID = "processDefinitionId";
  private String processDefinitionId;

  public static final String JSON_PROPERTY_PROCESS_MODEL_ID = "processModelId";
  private String processModelId;

  public static final String JSON_PROPERTY_PROCESS_MODEL_NAME = "processModelName";
  private String processModelName;

  public static final String JSON_PROPERTY_PARENT_PROCESS_INSTANCE_ID = "parentProcessInstanceId";
  private String parentProcessInstanceId;

  public static final String JSON_PROPERTY_HASH = "hash";
  private String hash;

  public static final String JSON_PROPERTY_XML = "xml";
  private String xml;

  public static final String JSON_PROPERTY_STATE = "state";
  private ProcessInstanceState state;

  public static final String JSON_PROPERTY_ERROR = "error";
  private Object error;

  public static final String JSON_PROPERTY_OWNER_ID = "ownerId";
  private String ownerId;

  public static final String JSON_PROPERTY_ANONYMOUS_SESSION_ID = "anonymousSessionId";
  private String anonymousSessionId;

  public static final String JSON_PROPERTY_STARTED_BY_ROOT_ACCESS_TOKEN = "startedByRootAccessToken";
  private Boolean startedByRootAccessToken;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private String createdAt;

  public static final String JSON_PROPERTY_FINISHED_AT = "finishedAt";
  private String finishedAt;

  public static final String JSON_PROPERTY_RESTARTED_AT = "restartedAt";
  private String restartedAt;

  public static final String JSON_PROPERTY_TERMINATED_BY_USER_ID = "terminatedByUserId";
  private String terminatedByUserId;

  public static final String JSON_PROPERTY_DURATION_IN_MILLISECONDS = "durationInMilliseconds";
  private BigDecimal durationInMilliseconds;

  public static final String JSON_PROPERTY_START_EVENT_ID = "startEventId";
  private String startEventId;

  public static final String JSON_PROPERTY_START_EVENT_TYPE = "startEventType";
  private EventType startEventType;

  public static final String JSON_PROPERTY_START_TOKEN = "startToken";
  private Object startToken;

  public static final String JSON_PROPERTY_END_EVENT_ID = "endEventId";
  private String endEventId;

  public static final String JSON_PROPERTY_END_EVENT_TYPE = "endEventType";
  private EventType endEventType;

  public static final String JSON_PROPERTY_END_TOKEN = "endToken";
  private Object endToken;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private Object metadata;

  public static final String JSON_PROPERTY_CORRELATION = "correlation";
  private Correlation correlation;

  public static final String JSON_PROPERTY_TRIGGERED_BY_FLOW_NODE_INSTANCE = "triggeredByFlowNodeInstance";
  private FlowNodeInstance triggeredByFlowNodeInstance;


  public ProcessInstance correlationId(String correlationId) {
    
    this.correlationId = correlationId;
    return this;
  }

   /**
   * The id of the correlation in whichs context the process instance runs.
   * @return correlationId
  **/
  @ApiModelProperty(required = true, value = "The id of the correlation in whichs context the process instance runs.")
  @JsonProperty(JSON_PROPERTY_CORRELATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCorrelationId() {
    return correlationId;
  }


  public void setCorrelationId(String correlationId) {
    this.correlationId = correlationId;
  }


  public ProcessInstance processInstanceId(String processInstanceId) {
    
    this.processInstanceId = processInstanceId;
    return this;
  }

   /**
   * The id of the process instance.
   * @return processInstanceId
  **/
  @ApiModelProperty(required = true, value = "The id of the process instance.")
  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProcessInstanceId() {
    return processInstanceId;
  }


  public void setProcessInstanceId(String processInstanceId) {
    this.processInstanceId = processInstanceId;
  }


  public ProcessInstance processDefinitionId(String processDefinitionId) {
    
    this.processDefinitionId = processDefinitionId;
    return this;
  }

   /**
   * The id of the process definition which the process instance belongs to.
   * @return processDefinitionId
  **/
  @ApiModelProperty(required = true, value = "The id of the process definition which the process instance belongs to.")
  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProcessDefinitionId() {
    return processDefinitionId;
  }


  public void setProcessDefinitionId(String processDefinitionId) {
    this.processDefinitionId = processDefinitionId;
  }


  public ProcessInstance processModelId(String processModelId) {
    
    this.processModelId = processModelId;
    return this;
  }

   /**
   * The id of the executed process model.
   * @return processModelId
  **/
  @ApiModelProperty(required = true, value = "The id of the executed process model.")
  @JsonProperty(JSON_PROPERTY_PROCESS_MODEL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProcessModelId() {
    return processModelId;
  }


  public void setProcessModelId(String processModelId) {
    this.processModelId = processModelId;
  }


  public ProcessInstance processModelName(String processModelName) {
    
    this.processModelName = processModelName;
    return this;
  }

   /**
   * The name of the executed process model.
   * @return processModelName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the executed process model.")
  @JsonProperty(JSON_PROPERTY_PROCESS_MODEL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProcessModelName() {
    return processModelName;
  }


  public void setProcessModelName(String processModelName) {
    this.processModelName = processModelName;
  }


  public ProcessInstance parentProcessInstanceId(String parentProcessInstanceId) {
    
    this.parentProcessInstanceId = parentProcessInstanceId;
    return this;
  }

   /**
   * The id of the parent process instance, if this process instance is a sub process.
   * @return parentProcessInstanceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the parent process instance, if this process instance is a sub process.")
  @JsonProperty(JSON_PROPERTY_PARENT_PROCESS_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParentProcessInstanceId() {
    return parentProcessInstanceId;
  }


  public void setParentProcessInstanceId(String parentProcessInstanceId) {
    this.parentProcessInstanceId = parentProcessInstanceId;
  }


  public ProcessInstance hash(String hash) {
    
    this.hash = hash;
    return this;
  }

   /**
   * The hash of the used process model.
   * @return hash
  **/
  @ApiModelProperty(required = true, value = "The hash of the used process model.")
  @JsonProperty(JSON_PROPERTY_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHash() {
    return hash;
  }


  public void setHash(String hash) {
    this.hash = hash;
  }


  public ProcessInstance xml(String xml) {
    
    this.xml = xml;
    return this;
  }

   /**
   * The xml of the used process model.
   * @return xml
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The xml of the used process model.")
  @JsonProperty(JSON_PROPERTY_XML)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getXml() {
    return xml;
  }


  public void setXml(String xml) {
    this.xml = xml;
  }


  public ProcessInstance state(ProcessInstanceState state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ProcessInstanceState getState() {
    return state;
  }


  public void setState(ProcessInstanceState state) {
    this.state = state;
  }


  public ProcessInstance error(Object error) {
    
    this.error = error;
    return this;
  }

   /**
   * The error that occured during execution of the process instance (if any).
   * @return error
  **/
  @ApiModelProperty(required = true, value = "The error that occured during execution of the process instance (if any).")
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getError() {
    return error;
  }


  public void setError(Object error) {
    this.error = error;
  }


  public ProcessInstance ownerId(String ownerId) {
    
    this.ownerId = ownerId;
    return this;
  }

   /**
   * The id of the user who started the process instance.
   * @return ownerId
  **/
  @ApiModelProperty(required = true, value = "The id of the user who started the process instance.")
  @JsonProperty(JSON_PROPERTY_OWNER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOwnerId() {
    return ownerId;
  }


  public void setOwnerId(String ownerId) {
    this.ownerId = ownerId;
  }


  public ProcessInstance anonymousSessionId(String anonymousSessionId) {
    
    this.anonymousSessionId = anonymousSessionId;
    return this;
  }

   /**
   * The id of the anonymous session that started the process instance (if any).
   * @return anonymousSessionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the anonymous session that started the process instance (if any).")
  @JsonProperty(JSON_PROPERTY_ANONYMOUS_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAnonymousSessionId() {
    return anonymousSessionId;
  }


  public void setAnonymousSessionId(String anonymousSessionId) {
    this.anonymousSessionId = anonymousSessionId;
  }


  public ProcessInstance startedByRootAccessToken(Boolean startedByRootAccessToken) {
    
    this.startedByRootAccessToken = startedByRootAccessToken;
    return this;
  }

   /**
   * A flag indicating whether or not the process instance was started using a root access token.
   * @return startedByRootAccessToken
  **/
  @ApiModelProperty(required = true, value = "A flag indicating whether or not the process instance was started using a root access token.")
  @JsonProperty(JSON_PROPERTY_STARTED_BY_ROOT_ACCESS_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getStartedByRootAccessToken() {
    return startedByRootAccessToken;
  }


  public void setStartedByRootAccessToken(Boolean startedByRootAccessToken) {
    this.startedByRootAccessToken = startedByRootAccessToken;
  }


  public ProcessInstance createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The date when the process instance was started.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the process instance was started.")
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public ProcessInstance finishedAt(String finishedAt) {
    
    this.finishedAt = finishedAt;
    return this;
  }

   /**
   * The date when the process instance was finished.
   * @return finishedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the process instance was finished.")
  @JsonProperty(JSON_PROPERTY_FINISHED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFinishedAt() {
    return finishedAt;
  }


  public void setFinishedAt(String finishedAt) {
    this.finishedAt = finishedAt;
  }


  public ProcessInstance restartedAt(String restartedAt) {
    
    this.restartedAt = restartedAt;
    return this;
  }

   /**
   * The date when the process instance was restarted (if any).
   * @return restartedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the process instance was restarted (if any).")
  @JsonProperty(JSON_PROPERTY_RESTARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRestartedAt() {
    return restartedAt;
  }


  public void setRestartedAt(String restartedAt) {
    this.restartedAt = restartedAt;
  }


  public ProcessInstance terminatedByUserId(String terminatedByUserId) {
    
    this.terminatedByUserId = terminatedByUserId;
    return this;
  }

   /**
   * The id of the user who terminated the process instance (if any).
   * @return terminatedByUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the user who terminated the process instance (if any).")
  @JsonProperty(JSON_PROPERTY_TERMINATED_BY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTerminatedByUserId() {
    return terminatedByUserId;
  }


  public void setTerminatedByUserId(String terminatedByUserId) {
    this.terminatedByUserId = terminatedByUserId;
  }


  public ProcessInstance durationInMilliseconds(BigDecimal durationInMilliseconds) {
    
    this.durationInMilliseconds = durationInMilliseconds;
    return this;
  }

   /**
   * The duration of the process instance in milliseconds.
   * @return durationInMilliseconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The duration of the process instance in milliseconds.")
  @JsonProperty(JSON_PROPERTY_DURATION_IN_MILLISECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDurationInMilliseconds() {
    return durationInMilliseconds;
  }


  public void setDurationInMilliseconds(BigDecimal durationInMilliseconds) {
    this.durationInMilliseconds = durationInMilliseconds;
  }


  public ProcessInstance startEventId(String startEventId) {
    
    this.startEventId = startEventId;
    return this;
  }

   /**
   * The id of the start event that started the process instance.
   * @return startEventId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the start event that started the process instance.")
  @JsonProperty(JSON_PROPERTY_START_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartEventId() {
    return startEventId;
  }


  public void setStartEventId(String startEventId) {
    this.startEventId = startEventId;
  }


  public ProcessInstance startEventType(EventType startEventType) {
    
    this.startEventType = startEventType;
    return this;
  }

   /**
   * Get startEventType
   * @return startEventType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_START_EVENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EventType getStartEventType() {
    return startEventType;
  }


  public void setStartEventType(EventType startEventType) {
    this.startEventType = startEventType;
  }


  public ProcessInstance startToken(Object startToken) {
    
    this.startToken = startToken;
    return this;
  }

   /**
   * The token that was used to start the process instance
   * @return startToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The token that was used to start the process instance")
  @JsonProperty(JSON_PROPERTY_START_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getStartToken() {
    return startToken;
  }


  public void setStartToken(Object startToken) {
    this.startToken = startToken;
  }


  public ProcessInstance endEventId(String endEventId) {
    
    this.endEventId = endEventId;
    return this;
  }

   /**
   * The id of the end event that ended the process instance (if ended).
   * @return endEventId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the end event that ended the process instance (if ended).")
  @JsonProperty(JSON_PROPERTY_END_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndEventId() {
    return endEventId;
  }


  public void setEndEventId(String endEventId) {
    this.endEventId = endEventId;
  }


  public ProcessInstance endEventType(EventType endEventType) {
    
    this.endEventType = endEventType;
    return this;
  }

   /**
   * Get endEventType
   * @return endEventType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_END_EVENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EventType getEndEventType() {
    return endEventType;
  }


  public void setEndEventType(EventType endEventType) {
    this.endEventType = endEventType;
  }


  public ProcessInstance endToken(Object endToken) {
    
    this.endToken = endToken;
    return this;
  }

   /**
   * The token that reached the end event (if ended).
   * @return endToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The token that reached the end event (if ended).")
  @JsonProperty(JSON_PROPERTY_END_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getEndToken() {
    return endToken;
  }


  public void setEndToken(Object endToken) {
    this.endToken = endToken;
  }


  public ProcessInstance metadata(Object metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Metadata for a ProcessInstance.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Metadata for a ProcessInstance.")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getMetadata() {
    return metadata;
  }


  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  public ProcessInstance correlation(Correlation correlation) {
    
    this.correlation = correlation;
    return this;
  }

   /**
   * Get correlation
   * @return correlation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CORRELATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Correlation getCorrelation() {
    return correlation;
  }


  public void setCorrelation(Correlation correlation) {
    this.correlation = correlation;
  }


  public ProcessInstance triggeredByFlowNodeInstance(FlowNodeInstance triggeredByFlowNodeInstance) {
    
    this.triggeredByFlowNodeInstance = triggeredByFlowNodeInstance;
    return this;
  }

   /**
   * Get triggeredByFlowNodeInstance
   * @return triggeredByFlowNodeInstance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRIGGERED_BY_FLOW_NODE_INSTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FlowNodeInstance getTriggeredByFlowNodeInstance() {
    return triggeredByFlowNodeInstance;
  }


  public void setTriggeredByFlowNodeInstance(FlowNodeInstance triggeredByFlowNodeInstance) {
    this.triggeredByFlowNodeInstance = triggeredByFlowNodeInstance;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessInstance processInstance = (ProcessInstance) o;
    return Objects.equals(this.correlationId, processInstance.correlationId) &&
        Objects.equals(this.processInstanceId, processInstance.processInstanceId) &&
        Objects.equals(this.processDefinitionId, processInstance.processDefinitionId) &&
        Objects.equals(this.processModelId, processInstance.processModelId) &&
        Objects.equals(this.processModelName, processInstance.processModelName) &&
        Objects.equals(this.parentProcessInstanceId, processInstance.parentProcessInstanceId) &&
        Objects.equals(this.hash, processInstance.hash) &&
        Objects.equals(this.xml, processInstance.xml) &&
        Objects.equals(this.state, processInstance.state) &&
        Objects.equals(this.error, processInstance.error) &&
        Objects.equals(this.ownerId, processInstance.ownerId) &&
        Objects.equals(this.anonymousSessionId, processInstance.anonymousSessionId) &&
        Objects.equals(this.startedByRootAccessToken, processInstance.startedByRootAccessToken) &&
        Objects.equals(this.createdAt, processInstance.createdAt) &&
        Objects.equals(this.finishedAt, processInstance.finishedAt) &&
        Objects.equals(this.restartedAt, processInstance.restartedAt) &&
        Objects.equals(this.terminatedByUserId, processInstance.terminatedByUserId) &&
        Objects.equals(this.durationInMilliseconds, processInstance.durationInMilliseconds) &&
        Objects.equals(this.startEventId, processInstance.startEventId) &&
        Objects.equals(this.startEventType, processInstance.startEventType) &&
        Objects.equals(this.startToken, processInstance.startToken) &&
        Objects.equals(this.endEventId, processInstance.endEventId) &&
        Objects.equals(this.endEventType, processInstance.endEventType) &&
        Objects.equals(this.endToken, processInstance.endToken) &&
        Objects.equals(this.metadata, processInstance.metadata) &&
        Objects.equals(this.correlation, processInstance.correlation) &&
        Objects.equals(this.triggeredByFlowNodeInstance, processInstance.triggeredByFlowNodeInstance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(correlationId, processInstanceId, processDefinitionId, processModelId, processModelName, parentProcessInstanceId, hash, xml, state, error, ownerId, anonymousSessionId, startedByRootAccessToken, createdAt, finishedAt, restartedAt, terminatedByUserId, durationInMilliseconds, startEventId, startEventType, startToken, endEventId, endEventType, endToken, metadata, correlation, triggeredByFlowNodeInstance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessInstance {\n");
    sb.append("    correlationId: ").append(toIndentedString(correlationId)).append("\n");
    sb.append("    processInstanceId: ").append(toIndentedString(processInstanceId)).append("\n");
    sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
    sb.append("    processModelId: ").append(toIndentedString(processModelId)).append("\n");
    sb.append("    processModelName: ").append(toIndentedString(processModelName)).append("\n");
    sb.append("    parentProcessInstanceId: ").append(toIndentedString(parentProcessInstanceId)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    xml: ").append(toIndentedString(xml)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    anonymousSessionId: ").append(toIndentedString(anonymousSessionId)).append("\n");
    sb.append("    startedByRootAccessToken: ").append(toIndentedString(startedByRootAccessToken)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    finishedAt: ").append(toIndentedString(finishedAt)).append("\n");
    sb.append("    restartedAt: ").append(toIndentedString(restartedAt)).append("\n");
    sb.append("    terminatedByUserId: ").append(toIndentedString(terminatedByUserId)).append("\n");
    sb.append("    durationInMilliseconds: ").append(toIndentedString(durationInMilliseconds)).append("\n");
    sb.append("    startEventId: ").append(toIndentedString(startEventId)).append("\n");
    sb.append("    startEventType: ").append(toIndentedString(startEventType)).append("\n");
    sb.append("    startToken: ").append(toIndentedString(startToken)).append("\n");
    sb.append("    endEventId: ").append(toIndentedString(endEventId)).append("\n");
    sb.append("    endEventType: ").append(toIndentedString(endEventType)).append("\n");
    sb.append("    endToken: ").append(toIndentedString(endToken)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    correlation: ").append(toIndentedString(correlation)).append("\n");
    sb.append("    triggeredByFlowNodeInstance: ").append(toIndentedString(triggeredByFlowNodeInstance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

