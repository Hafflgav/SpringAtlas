/*
 * 5Minds Engine API
 * This is the swagger ui documentation of the 5Minds Engine API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.miragon.processcube.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Contains a response from the Engine, which will be send after a ProcessInstance was started. Depending on the type of start callback used, this will also contain information about the reached EndEvent. 
 */
@ApiModel(description = "Contains a response from the Engine, which will be send after a ProcessInstance was started. Depending on the type of start callback used, this will also contain information about the reached EndEvent. ")
@JsonPropertyOrder({
  ProcessStartResponse.JSON_PROPERTY_PROCESS_INSTANCE_ID,
  ProcessStartResponse.JSON_PROPERTY_CORRELATION_ID,
  ProcessStartResponse.JSON_PROPERTY_END_EVENT_ID,
  ProcessStartResponse.JSON_PROPERTY_TOKEN_PAYLOAD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-19T14:39:29.278702+02:00[Europe/Berlin]")
public class ProcessStartResponse {
  public static final String JSON_PROPERTY_PROCESS_INSTANCE_ID = "processInstanceId";
  private String processInstanceId;

  public static final String JSON_PROPERTY_CORRELATION_ID = "correlationId";
  private String correlationId;

  public static final String JSON_PROPERTY_END_EVENT_ID = "endEventId";
  private String endEventId;

  public static final String JSON_PROPERTY_TOKEN_PAYLOAD = "tokenPayload";
  private Object tokenPayload;


  public ProcessStartResponse processInstanceId(String processInstanceId) {
    
    this.processInstanceId = processInstanceId;
    return this;
  }

   /**
   * The ID of the ProcessInstance.
   * @return processInstanceId
  **/
  @ApiModelProperty(required = true, value = "The ID of the ProcessInstance.")
  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProcessInstanceId() {
    return processInstanceId;
  }


  public void setProcessInstanceId(String processInstanceId) {
    this.processInstanceId = processInstanceId;
  }


  public ProcessStartResponse correlationId(String correlationId) {
    
    this.correlationId = correlationId;
    return this;
  }

   /**
   * The ID of the Correlation in which the started ProcessInstance runs.
   * @return correlationId
  **/
  @ApiModelProperty(required = true, value = "The ID of the Correlation in which the started ProcessInstance runs.")
  @JsonProperty(JSON_PROPERTY_CORRELATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCorrelationId() {
    return correlationId;
  }


  public void setCorrelationId(String correlationId) {
    this.correlationId = correlationId;
  }


  public ProcessStartResponse endEventId(String endEventId) {
    
    this.endEventId = endEventId;
    return this;
  }

   /**
   * If the Engine is set to wait for the ProcessInstance to finish, this will contain the ID of the EndEvent with which ProcessInstance was finished.
   * @return endEventId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the Engine is set to wait for the ProcessInstance to finish, this will contain the ID of the EndEvent with which ProcessInstance was finished.")
  @JsonProperty(JSON_PROPERTY_END_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndEventId() {
    return endEventId;
  }


  public void setEndEventId(String endEventId) {
    this.endEventId = endEventId;
  }


  public ProcessStartResponse tokenPayload(Object tokenPayload) {
    
    this.tokenPayload = tokenPayload;
    return this;
  }

   /**
   * If the Engine is set to wait for the ProcessInstance to finish, this will contain the final result with which ProcessInstance was finished.
   * @return tokenPayload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the Engine is set to wait for the ProcessInstance to finish, this will contain the final result with which ProcessInstance was finished.")
  @JsonProperty(JSON_PROPERTY_TOKEN_PAYLOAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getTokenPayload() {
    return tokenPayload;
  }


  public void setTokenPayload(Object tokenPayload) {
    this.tokenPayload = tokenPayload;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessStartResponse processStartResponse = (ProcessStartResponse) o;
    return Objects.equals(this.processInstanceId, processStartResponse.processInstanceId) &&
        Objects.equals(this.correlationId, processStartResponse.correlationId) &&
        Objects.equals(this.endEventId, processStartResponse.endEventId) &&
        Objects.equals(this.tokenPayload, processStartResponse.tokenPayload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(processInstanceId, correlationId, endEventId, tokenPayload);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessStartResponse {\n");
    sb.append("    processInstanceId: ").append(toIndentedString(processInstanceId)).append("\n");
    sb.append("    correlationId: ").append(toIndentedString(correlationId)).append("\n");
    sb.append("    endEventId: ").append(toIndentedString(endEventId)).append("\n");
    sb.append("    tokenPayload: ").append(toIndentedString(tokenPayload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

