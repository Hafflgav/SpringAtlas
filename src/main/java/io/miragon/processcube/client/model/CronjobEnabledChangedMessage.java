/*
 * 5Minds Engine API
 * This is the swagger ui documentation of the 5Minds Engine API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.miragon.processcube.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Message that is sent whenever a Cronjob was enabled or disabled.
 */
@ApiModel(description = "Message that is sent whenever a Cronjob was enabled or disabled.")
@JsonPropertyOrder({
  CronjobEnabledChangedMessage.JSON_PROPERTY_PROCESS_MODEL_ID,
  CronjobEnabledChangedMessage.JSON_PROPERTY_FLOW_NODE_ID,
  CronjobEnabledChangedMessage.JSON_PROPERTY_ENABLED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-19T14:39:29.278702+02:00[Europe/Berlin]")
public class CronjobEnabledChangedMessage {
  public static final String JSON_PROPERTY_PROCESS_MODEL_ID = "processModelId";
  private String processModelId;

  public static final String JSON_PROPERTY_FLOW_NODE_ID = "flowNodeId";
  private String flowNodeId;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;


  public CronjobEnabledChangedMessage processModelId(String processModelId) {
    
    this.processModelId = processModelId;
    return this;
  }

   /**
   * Contains the ID of the Process Model whose executable state was changed.
   * @return processModelId
  **/
  @ApiModelProperty(required = true, value = "Contains the ID of the Process Model whose executable state was changed.")
  @JsonProperty(JSON_PROPERTY_PROCESS_MODEL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProcessModelId() {
    return processModelId;
  }


  public void setProcessModelId(String processModelId) {
    this.processModelId = processModelId;
  }


  public CronjobEnabledChangedMessage flowNodeId(String flowNodeId) {
    
    this.flowNodeId = flowNodeId;
    return this;
  }

   /**
   * Contains the ID of the Cycle Start Event.
   * @return flowNodeId
  **/
  @ApiModelProperty(required = true, value = "Contains the ID of the Cycle Start Event.")
  @JsonProperty(JSON_PROPERTY_FLOW_NODE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFlowNodeId() {
    return flowNodeId;
  }


  public void setFlowNodeId(String flowNodeId) {
    this.flowNodeId = flowNodeId;
  }


  public CronjobEnabledChangedMessage enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * The new enabled-state.
   * @return enabled
  **/
  @ApiModelProperty(required = true, value = "The new enabled-state.")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CronjobEnabledChangedMessage cronjobEnabledChangedMessage = (CronjobEnabledChangedMessage) o;
    return Objects.equals(this.processModelId, cronjobEnabledChangedMessage.processModelId) &&
        Objects.equals(this.flowNodeId, cronjobEnabledChangedMessage.flowNodeId) &&
        Objects.equals(this.enabled, cronjobEnabledChangedMessage.enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(processModelId, flowNodeId, enabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CronjobEnabledChangedMessage {\n");
    sb.append("    processModelId: ").append(toIndentedString(processModelId)).append("\n");
    sb.append("    flowNodeId: ").append(toIndentedString(flowNodeId)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

